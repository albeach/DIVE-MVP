{
    "id": "dive25",
    "realm": "dive25",
    "displayName": "DIVE25 Document Access System",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>DIVE25 Document Access System</span></div>",
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": true,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": true,
    "editUsernameAllowed": false,
    "bruteForceProtected": true,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 3,
    "defaultRoles": [
        "offline_access",
        "uma_authorization",
        "user"
    ],
    "requiredCredentials": [
        "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
    ],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self' https://dive25.local:8443 https://frontend.dive25.local:8443; frame-ancestors 'self' https://dive25.local:8443 https://frontend.dive25.local:8443; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "loginTheme": "dive25",
    "accountTheme": "dive25",
    "adminTheme": "dive25",
    "emailTheme": "dive25",
    "smtpServer": {},
    "eventsEnabled": true,
    "eventsListeners": [
        "jboss-logging"
    ],
    "enabledEventTypes": [
        "SEND_RESET_PASSWORD",
        "UPDATE_CONSENT_ERROR",
        "GRANT_CONSENT",
        "REMOVE_TOTP",
        "REVOKE_GRANT",
        "UPDATE_TOTP",
        "LOGIN_ERROR",
        "CLIENT_LOGIN",
        "RESET_PASSWORD_ERROR",
        "IMPERSONATE_ERROR",
        "CODE_TO_TOKEN_ERROR",
        "CUSTOM_REQUIRED_ACTION",
        "RESTART_AUTHENTICATION",
        "UPDATE_PROFILE_ERROR",
        "IMPERSONATE",
        "LOGIN",
        "UPDATE_PASSWORD_ERROR",
        "CLIENT_INITIATED_ACCOUNT_LINKING",
        "TOKEN_EXCHANGE",
        "LOGOUT",
        "REGISTER",
        "CLIENT_REGISTER",
        "IDENTITY_PROVIDER_LINK_ACCOUNT",
        "UPDATE_PASSWORD",
        "CLIENT_DELETE",
        "FEDERATED_IDENTITY_LINK_ERROR",
        "IDENTITY_PROVIDER_FIRST_LOGIN",
        "CLIENT_DELETE_ERROR",
        "VERIFY_EMAIL",
        "CLIENT_LOGIN_ERROR",
        "RESTART_AUTHENTICATION_ERROR",
        "EXECUTE_ACTIONS",
        "REMOVE_FEDERATED_IDENTITY_ERROR",
        "TOKEN_EXCHANGE_ERROR",
        "PERMISSION_TOKEN",
        "SEND_IDENTITY_PROVIDER_LINK_ERROR",
        "EXECUTE_ACTION_TOKEN_ERROR",
        "SEND_VERIFY_EMAIL",
        "EXECUTE_ACTIONS_ERROR",
        "REMOVE_FEDERATED_IDENTITY",
        "IDENTITY_PROVIDER_POST_LOGIN",
        "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
        "UPDATE_EMAIL",
        "REGISTER_ERROR",
        "REVOKE_GRANT_ERROR",
        "EXECUTE_ACTION_TOKEN",
        "LOGOUT_ERROR",
        "UPDATE_EMAIL_ERROR",
        "CLIENT_UPDATE_ERROR",
        "UPDATE_PROFILE",
        "FEDERATED_IDENTITY_LINK",
        "CLIENT_REGISTER_ERROR",
        "SEND_VERIFY_EMAIL_ERROR",
        "SEND_IDENTITY_PROVIDER_LINK",
        "RESET_PASSWORD",
        "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
        "REMOVE_TOTP_ERROR",
        "VERIFY_EMAIL_ERROR",
        "SEND_RESET_PASSWORD_ERROR",
        "CLIENT_UPDATE",
        "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
        "CUSTOM_REQUIRED_ACTION_ERROR",
        "UPDATE_CONSENT",
        "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR",
        "IDENTITY_PROVIDER_LOGIN_ERROR",
        "RESET_PASSWORD",
        "VERIFY_EMAIL",
        "GRANT_CONSENT"
    ],
    "adminEventsEnabled": true,
    "adminEventsDetailsEnabled": true,
    "internationalizationEnabled": true,
    "supportedLocales": [
        "en",
        "fr",
        "de"
    ],
    "defaultLocale": "en",
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
        "frontendUrl": "https://frontend.dive25.local:3001",
        "requireSsl": "external",
        "userProfileEnabled": "true",
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "parRequestUriLifespan": "60",
        "cibaInterval": "5",
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "clientOfflineSessionMaxLifespan": "0",
        "actionTokenGeneratedByAdminLifespan": "43200",
        "actionTokenGeneratedByUserLifespan": "300",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5"
    },
    "userManagedAccessAllowed": false,
    "roles": {
        "realm": [
            {
                "id": "admin-role",
                "name": "admin",
                "description": "Administrator role",
                "composite": false,
                "clientRole": false,
                "containerId": "dive25"
            },
            {
                "id": "user-role",
                "name": "user",
                "description": "Regular user role",
                "composite": false,
                "clientRole": false,
                "containerId": "dive25"
            },
            {
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "dive25"
            },
            {
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "dive25"
            }
        ],
        "client": {}
    },
    "clients": [
        {
            "clientId": "dive25-frontend",
            "enabled": true,
            "redirectUris": [
                "https://frontend.dive25.local:8443/*",
                "http://localhost:3000/*",
                "https://dive25.local:8443/*"
            ],
            "webOrigins": [
                "http://localhost:3000",
                "https://frontend.dive25.local:8443",
                "https://dive25.local:8443"
            ],
            "publicClient": true,
            "protocol": "openid-connect",
            "standardFlowEnabled": true,
            "directAccessGrantsEnabled": true,
            "fullScopeAllowed": true
        },
        {
            "clientId": "dive25-api",
            "enabled": true,
            "bearerOnly": true,
            "publicClient": false,
            "protocol": "openid-connect",
            "standardFlowEnabled": false,
            "serviceAccountsEnabled": true,
            "directAccessGrantsEnabled": false,
            "fullScopeAllowed": true
        }
    ],
    "clientScopes": [
        {
            "id": "web-origins",
            "name": "web-origins",
            "description": "OpenID Connect scope for add web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            }
        },
        {
            "id": "roles",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            }
        },
        {
            "id": "profile",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "email",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "address",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "phone",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "offline_access",
            "name": "offline_access",
            "description": "OpenID Connect scope for offline access",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "microprofile-jwt",
            "name": "microprofile-jwt",
            "description": "Microprofile JWT scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            }
        }
    ],
    "defaultDefaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
    ],
    "defaultOptionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
    ],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": [
                        "true"
                    ],
                    "allowed-client-scopes": [
                        "web-origins",
                        "roles",
                        "profile",
                        "email",
                        "address",
                        "phone",
                        "offline_access",
                        "microprofile-jwt"
                    ]
                }
            },
            {
                "name": "Allowed Protocol Mappers",
                "providerId": "allowed-protocol-mappers",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-usermodel-property-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-sha256-pairwise-sub-mapper"
                    ]
                }
            },
            {
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": [
                        "true"
                    ],
                    "client-uris-must-match": [
                        "true"
                    ],
                    "redirect-uris-must-match": [
                        "true"
                    ],
                    "verify-token-signature": [
                        "false"
                    ]
                }
            }
        ]
    },
    "identityProviders": [],
    "identityProviderMappers": [],
    "clientTemplates": [],
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}