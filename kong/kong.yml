_format_version: "3.0"
_transform: true

# Environment-specific configuration section
# This makes environment differences explicit and easier to manage
# 
# NOTE: For proper operation with port 8443, it's essential to manually add routes  
# with Kong Admin API after deployment. Example:
#
# curl -i -X POST http://localhost:YOUR_KONG_ADMIN_PORT/services/frontend-service/routes \
#   --data "name=frontend-root-domain" \
#   --data "hosts[]=dive25.local"
#
# Kong's declarative configuration doesn't support port-specific routing through the 'ports'
# parameter, so we rely on directly creating routes via the Admin API.
#
_env_config:
  dev:
    base_domain: localhost
    protocol: http
    ssl_verify: false
    authentication_required: false
    rate_limits:
      perMinute: 300
      perHour: 15000
    logging_level: debug
  test:
    base_domain: dive25.local
    protocol: https
    ssl_verify: false
    authentication_required: true
    rate_limits:
      perMinute: 180
      perHour: 10000
    logging_level: info
  prod:
    base_domain: dive25.com
    protocol: https
    ssl_verify: true
    authentication_required: true
    rate_limits:
      perMinute: 120
      perHour: 6000
    logging_level: warn

services:
  # Wildcard Service for *.dive25.local and *.dive25.com
  - name: wildcard-service
    url: ${INTERNAL_FRONTEND_URL:-http://frontend:3000}
    tags:
      - core
      - frontend
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      - name: wildcard-route
        hosts:
          - "*.${BASE_DOMAIN:-dive25.local}"
          - "*.${PROD_BASE_DOMAIN:-dive25.com}"
        protocols:
          - http
          - https
        priority: 5  # Lower priority so specific routes take precedence
        https_redirect_status_code: 301
    plugins:
      - name: response-transformer
        config:
          add:
            headers:
              - X-Frame-Options:SAMEORIGIN
              - X-XSS-Protection:1; mode=block
              - X-Content-Type-Options:nosniff
              - Referrer-Policy:strict-origin-when-cross-origin
      # Health check monitoring
      - name: health-checks
        config:
          active:
            healthy:
              interval: 5
              successes: 1
            unhealthy:
              interval: 5
              http_failures: 2
              tcp_failures: 2
              timeouts: 2
          passive:
            healthy:
              successes: 2
            unhealthy:
              http_failures: 2
              tcp_failures: 2
              timeouts: 2
          threshold: 0

  # Frontend Service
  - name: frontend-service
    url: ${INTERNAL_FRONTEND_URL:-http://frontend:3000}
    tags:
      - core
      - frontend
      - public
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      - name: frontend-route
        hosts:
          - ${BASE_DOMAIN:-dive25.local}
          - frontend.${BASE_DOMAIN:-dive25.local}
          - ${PROD_BASE_DOMAIN:-dive25.com}
          - frontend.${PROD_BASE_DOMAIN:-dive25.com}
          - ${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        priority: 10  # Higher priority than wildcard
        strip_path: false
        https_redirect_status_code: 301
      # Add explicit routes for auth callbacks 
      - name: frontend-callback-route
        hosts:
          - ${BASE_DOMAIN:-dive25.local}
          - frontend.${BASE_DOMAIN:-dive25.local}
          - ${PROD_BASE_DOMAIN:-dive25.com}
          - frontend.${PROD_BASE_DOMAIN:-dive25.com}
          - ${DEV_HOST:-localhost}
        paths:
          - /callback
          - /logout
          - /error
        protocols:
          - http
          - https
        priority: 25  # Higher than frontend-route but lower than login route
        strip_path: false
        https_redirect_status_code: 301
    plugins:
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_FRONTEND:-dive25-frontend}
          client_secret: ${KEYCLOAK_CLIENT_SECRET:-change-me-in-production}
          discovery: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/protocol/openid-connect/token/introspect
          bearer_only: false
          realm: ${KEYCLOAK_REALM:-dive25}
          redirect_uri_path: /callback
          logout_path: /logout
          redirect_after_logout_uri: /
          ssl_verify: ${PRODUCTION:-false}
          session_secret: ${SESSION_SECRET:-change_me_in_production}
          token_endpoint_auth_method: client_secret_post
          refresh_tokens: true
          encrypt_session_cookie: true
          use_pkce: true
          pkce_method: "S256"
          set_auth_header: true
          set_userinfo_header: true
          max_token_ttl: 14400
          timeout: 30000
          connection_timeout: 5000
          # Enable anonymous access
          anonymous: true
          # Add resilience settings for Keycloak connectivity
          recovery_page_path: null       # Don't redirect to recovery page, allow anonymous access instead
          client_credentials_grant_access_token_lifetime: 600  # 10 min token lifetime for client credentials
          introspection_expiry: 300      # 5 minutes - don't introspect tokens too frequently
          token_endpoint_retry: 3        # Try multiple times to connect to token endpoint
          introspection_endpoint_retry: 3 # Try multiple times to connect to introspection endpoint
          # Only enforce authentication on these paths
          auth_methods:
            - authorization_code
          response_type: code
          unauth_action: pass
          # Only protected routes that require authentication
          filters:
            - pattern: /api/.*
              methods:
                - GET
                - POST
                - PUT
                - DELETE
            - pattern: /dashboard/.*
            - pattern: /profile/.*
            - pattern: /settings/.*
          # Login path for explicit authentication
          login_path: /login
          forbidden_destroy_session: false
      - name: cors
        config:
          origins:
            - https://*.${BASE_DOMAIN:-dive25.local}
            - https://*.${PROD_BASE_DOMAIN:-dive25.com}
            - http://localhost:*
            - https://localhost:*
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
            - PATCH
          headers:
            - Authorization
            - Content-Type
            - Accept
            - Origin
            - X-Requested-With
            - X-Token-Expiring
            - X-Token-Expires-In
            - X-Request-ID
          credentials: true
          max_age: 3600
          preflight_continue: false
      - name: rate-limiting
        config:
          minute: ${RATE_LIMIT_FRONTEND_MINUTE:-60}
          hour: ${RATE_LIMIT_FRONTEND_HOUR:-3600}
          policy: local
          hide_client_headers: false
          fault_tolerant: true
      # Request ID generation for tracking
      - name: correlation-id
        config:
          header_name: X-Request-ID
          generator: uuid
          echo_downstream: true
      # Logging plugin with detailed request logs
      - name: http-log
        config:
          http_endpoint: ${LOG_ENDPOINT:-http://log-collector:3000/logs}
          method: POST
          timeout: 1000
          keepalive: 60000
          flush_timeout: 2
          retry_count: 5
          queue_size: 1
          content_type: application/json
      # Security headers for frontend
      - name: response-transformer
        config:
          add:
            headers:
              - X-Frame-Options:SAMEORIGIN
              - X-XSS-Protection:1; mode=block
              - X-Content-Type-Options:nosniff
              - Referrer-Policy:strict-origin-when-cross-origin
              - Strict-Transport-Security:max-age=31536000; includeSubDomains; preload
              - Permissions-Policy:camera=self, microphone=self, geolocation=self

  # Frontend Service - Login Route (authentication enforced)
  - name: frontend-login-service
    url: ${INTERNAL_FRONTEND_URL:-http://frontend:3000}/login
    tags:
      - core
      - frontend
      - auth
      - public
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      - name: frontend-login-route-enforced
        hosts:
          - ${BASE_DOMAIN:-dive25.local}
          - frontend.${BASE_DOMAIN:-dive25.local}
          - ${PROD_BASE_DOMAIN:-dive25.com}
          - frontend.${PROD_BASE_DOMAIN:-dive25.com}
          - ${DEV_HOST:-localhost}
        paths:
          - /login
        protocols:
          - http
          - https
        priority: 30  # Higher priority than all other frontend routes
        strip_path: false
        https_redirect_status_code: 301
      # Add specific login route for port 8443  
      - name: frontend-login-8443-route-enforced
        hosts:
          - ${BASE_DOMAIN:-dive25.local}
          - frontend.${BASE_DOMAIN:-dive25.local}
        paths:
          - /login
        protocols:
          - https
        ports:
          - 8443
        priority: 35  # Higher than regular login route
        strip_path: false
        https_redirect_status_code: 301
    plugins:
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_FRONTEND:-dive25-frontend}
          client_secret: ${KEYCLOAK_CLIENT_SECRET:-change-me-in-production}
          discovery: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/protocol/openid-connect/token/introspect
          bearer_only: false
          realm: ${KEYCLOAK_REALM:-dive25}
          redirect_uri_path: /callback
          logout_path: /logout
          redirect_after_logout_uri: /
          ssl_verify: ${PRODUCTION:-false}
          session_secret: ${SESSION_SECRET:-change_me_in_production}
          token_endpoint_auth_method: client_secret_post
          refresh_tokens: true
          encrypt_session_cookie: true
          use_pkce: true
          pkce_method: "S256"
          set_auth_header: true
          set_userinfo_header: true
          max_token_ttl: 14400
          timeout: 30000
          connection_timeout: 5000
          # Force authentication on login route
          anonymous: false
          response_type: code
          auth_methods:
            - authorization_code
          # Add resilience settings
          token_endpoint_retry: 3        # Try multiple times to connect to token endpoint 
          introspection_endpoint_retry: 3 # Try multiple times to connect to introspection endpoint
          introspection_expiry: 300      # 5 minutes - don't introspect tokens too frequently
          recovery_page_path: /error     # On critical errors redirect to an error page
          # Security headers for login page
      - name: response-transformer
        config:
          add:
            headers:
              - X-Frame-Options:DENY # Even stricter for login page
              - X-XSS-Protection:1; mode=block
              - X-Content-Type-Options:nosniff
              - Referrer-Policy:strict-origin-when-cross-origin
              - Strict-Transport-Security:max-age=31536000; includeSubDomains; preload
              - Cache-Control:no-store, no-cache, must-revalidate

  # API Service
  - name: api-service
    url: ${INTERNAL_API_URL:-http://api:3000}
    tags:
      - core
      - backend
      - api
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 3
    routes:
      - name: api-route
        hosts:
          - api.${BASE_DOMAIN:-dive25.local}
          - api.${PROD_BASE_DOMAIN:-dive25.com}
          - api.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        strip_path: false
        https_redirect_status_code: 301
      # Add a route for /api/v1 on the main domain
      - name: api-main-domain-route
        hosts:
          - ${BASE_DOMAIN:-dive25.local}
          - ${PROD_BASE_DOMAIN:-dive25.com}
          - ${DEV_HOST:-localhost}
        paths:
          - /api/v1
        protocols:
          - http
          - https
        strip_path: false
        https_redirect_status_code: 301
    plugins:
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_API:-dive25-api}
          client_secret: ${KEYCLOAK_CLIENT_SECRET:-change-me-in-production}
          discovery: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL:-https://keycloak.dive25.local}/auth/realms/${KEYCLOAK_REALM:-dive25}/protocol/openid-connect/token/introspect
          bearer_only: true
          realm: ${KEYCLOAK_REALM:-dive25}
          ssl_verify: ${PRODUCTION:-false}
          # Added for security, but dev-friendly
          introspection_cache_ttl: 60      # 1 minute cache for dev (shorter for quicker updates)
          timeout: 15000                    # Longer timeout for debugging
          user_authenticated_headers: ["X-User-ID", "X-User-Name", "X-User-Roles"] # Useful headers for development
      - name: cors
        config:
          origins:
            - https://*.${BASE_DOMAIN:-dive25.local}
            - https://*.${PROD_BASE_DOMAIN:-dive25.com}
            - http://localhost:*
            - https://localhost:*
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
            - PATCH
          headers:
            - Authorization
            - Content-Type
            - Accept
            - Origin
            - X-Requested-With
            - X-Request-ID
          credentials: true
          max_age: 3600
          preflight_continue: false
      - name: rate-limiting
        config:
          minute: ${RATE_LIMIT_API_MINUTE:-120}
          hour: ${RATE_LIMIT_API_HOUR:-3600}
          policy: local
          hide_client_headers: false
          fault_tolerant: true
      # Request ID generation for tracking
      - name: correlation-id
        config:
          header_name: X-Request-ID
          generator: uuid
          echo_downstream: true
      # API metrics tracking
      - name: prometheus
        config:
          status_code_metrics: true
          latency_metrics: true
          bandwidth_metrics: true
          upstream_health_metrics: true
      # Circuit breaker for API
      - name: circuit-breaker
        config:
          error_threshold_percentage: 50
          sleep_window_ms: 5000
      - name: http-log
        config:
          http_endpoint: ${LOG_ENDPOINT:-http://log-collector:3000/logs}
          method: POST
          timeout: 1000
          keepalive: 60000
          flush_timeout: 2
          retry_count: 5
          queue_size: 1
          content_type: application/json
  
  # Keycloak Service (with enhanced plugins)
  - name: keycloak-service
    url: ${INTERNAL_KEYCLOAK_URL:-http://keycloak:8080}
    tags:
      - core
      - auth
      - keycloak
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      - name: keycloak-auth-route
        hosts:
          - keycloak.${BASE_DOMAIN:-dive25.local}
          - keycloak.${PROD_BASE_DOMAIN:-dive25.com}
          - keycloak.${DEV_HOST:-localhost}
        paths:
          - /auth
        protocols:
          - http
          - https
        strip_path: true
        https_redirect_status_code: 301
      - name: keycloak-root-route
        hosts:
          - keycloak.${BASE_DOMAIN:-dive25.local}
          - keycloak.${PROD_BASE_DOMAIN:-dive25.com}
          - keycloak.${DEV_HOST:-localhost}
        paths:
          - /
        protocols:
          - http
          - https
        strip_path: false
        https_redirect_status_code: 301
      # Add back the keycloak-resources-route  
      - name: keycloak-resources-route
        hosts:
          - keycloak.${BASE_DOMAIN:-dive25.local}
          - keycloak.${PROD_BASE_DOMAIN:-dive25.com}
          - keycloak.${DEV_HOST:-localhost}
        paths:
          - /resources
          - /auth/resources
        protocols:
          - http
          - https
        strip_path: true
        https_redirect_status_code: 301
    plugins:
      - name: response-transformer
        config:
          remove:
            headers:
              - Content-Security-Policy
              - X-Frame-Options
      # IP restriction with environment-specific configuration
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
            - 172.16.0.0/12
            - 192.168.0.0/16
          message: "Access denied by IP restriction policy"
        enabled: ${KEYCLOAK_IP_RESTRICTION:-true}
      - name: cors
        config:
          origins:
            - https://*.${BASE_DOMAIN:-dive25.local}
            - https://*.${PROD_BASE_DOMAIN:-dive25.com}
            - http://localhost:*
            - https://localhost:*
          methods:
            - GET
            - POST
            - OPTIONS
            - PUT
          credentials: true
          max_age: 3600
          preflight_continue: false
      # Circuit breaker for Keycloak
      - name: circuit-breaker
        config:
          error_threshold_percentage: 40
          sleep_window_ms: 10000
      # Request ID generation for tracking
      - name: correlation-id
        config:
          header_name: X-Request-ID
          generator: uuid
          echo_downstream: true
      # Keycloak health checks
      - name: health-checks
        config:
          active:
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3
              tcp_failures: 3
              timeouts: 3
            http_path: /auth/realms/master
          passive:
            healthy:
              successes: 3
            unhealthy:
              http_failures: 3
              tcp_failures: 3
              timeouts: 3
          threshold: 0
  
  # MongoDB Express Service - Dev and Test only
  - name: mongo-express-service
    url: http://mongo-express:8081
    tags:
      - admin
      - dev
      - test
      - database
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: mongo-express-route
        hosts:
          - mongo-express.${BASE_DOMAIN:-dive25.local}
          - mongo-express.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      # Admin tools not enabled in production
      - name: request-termination
        config:
          status_code: 403
          message: "This admin tool is disabled in production environment"
          content_type: "application/json"
        enabled: ${IS_PRODUCTION:-false}
      # Basic auth for admin protection
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction with more limited range
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
            - 172.16.0.0/12
          message: "Access denied by IP restriction policy"
  
  # Grafana Service
  - name: grafana-service
    url: http://grafana:3000
    tags:
      - monitoring
      - metrics
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: grafana-route
        hosts:
          - grafana.${BASE_DOMAIN:-dive25.local}
          - grafana.${PROD_BASE_DOMAIN:-dive25.com}
          - grafana.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction with limited range
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
            - 172.16.0.0/12
          message: "Access denied by IP restriction policy"
  
  # Prometheus Service
  - name: prometheus-service
    url: http://prometheus:9090
    tags:
      - monitoring
      - metrics
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: prometheus-route
        hosts:
          - prometheus.${BASE_DOMAIN:-dive25.local}
          - prometheus.${PROD_BASE_DOMAIN:-dive25.com}
          - prometheus.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
            - 172.16.0.0/12
          message: "Access denied by IP restriction policy"
  
  # phpLDAPadmin Service - Dev and Test only
  - name: phpldapadmin-service
    url: http://phpldapadmin:80
    tags:
      - admin
      - ldap
      - dev
      - test
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: phpldapadmin-route
        hosts:
          - phpldapadmin.${BASE_DOMAIN:-dive25.local}
          - phpldapadmin.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      # Admin tools not enabled in production
      - name: request-termination
        config:
          status_code: 403
          message: "This admin tool is disabled in production environment"
          content_type: "application/json"
        enabled: ${IS_PRODUCTION:-false}
      # Basic auth for admin protection
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction with more limited range
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
            - 172.16.0.0/12
          message: "Access denied by IP restriction policy"
  
  # Kong Admin Service (exposed via subdomain) - Dev and Test only
  - name: kong-admin-service
    url: http://kong:8001
    tags:
      - admin
      - kong
      - dev
      - test
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: kong-admin-route
        hosts:
          - kong.${BASE_DOMAIN:-dive25.local}
          - kong.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      # Admin tools not enabled in production
      - name: request-termination
        config:
          status_code: 403
          message: "This admin tool is disabled in production environment"
          content_type: "application/json"
        enabled: ${IS_PRODUCTION:-false}
      # Basic auth for admin protection
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction with more limited range
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
          message: "Access denied by IP restriction policy"
  
  # Konga Service - Dev and Test only
  - name: konga-service
    url: http://konga:1337
    tags:
      - admin
      - kong
      - dev
      - test
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    routes:
      - name: konga-route
        hosts:
          - konga.${BASE_DOMAIN:-dive25.local}
          - konga.${DEV_HOST:-localhost}
        protocols:
          - http
          - https
        https_redirect_status_code: 301
    plugins:
      # Admin tools not enabled in production
      - name: request-termination
        config:
          status_code: 403
          message: "This admin tool is disabled in production environment"
          content_type: "application/json"
        enabled: ${IS_PRODUCTION:-false}
      # Basic auth for admin protection
      - name: basic-auth
        config:
          hide_credentials: true
      # IP restriction with more limited range
      - name: ip-restriction
        config:
          allow:
            - 127.0.0.1/32
            - 10.0.0.0/8
          message: "Access denied by IP restriction policy"

# Global plugins
plugins:
  # Global response transformation
  - name: response-transformer
    config:
      remove:
        headers:
          - Content-Security-Policy
          - X-Frame-Options
      add:
        headers:
          Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://keycloak.${BASE_DOMAIN:-dive25.local} https://*.${BASE_DOMAIN:-dive25.local} https://*.${PROD_BASE_DOMAIN:-dive25.com} http://localhost:* http://*.dive25-network; frame-src 'self' https://keycloak.${BASE_DOMAIN:-dive25.local} https://*.${BASE_DOMAIN:-dive25.local} https://*.${PROD_BASE_DOMAIN:-dive25.com} http://localhost:* http://*.dive25-network; object-src 'none'; base-uri 'self'; form-action 'self' https://keycloak.${BASE_DOMAIN:-dive25.local} https://*.${BASE_DOMAIN:-dive25.local} https://*.${PROD_BASE_DOMAIN:-dive25.com} http://localhost:*; frame-ancestors 'self' https://${BASE_DOMAIN:-dive25.local} https://frontend.${BASE_DOMAIN:-dive25.local} https://*.${BASE_DOMAIN:-dive25.local} https://*.${PROD_BASE_DOMAIN:-dive25.com} http://localhost:* http://*.dive25-network; block-all-mixed-content;"
          X-XSS-Protection: "1; mode=block"
          X-Content-Type-Options: "nosniff"
          Referrer-Policy: "strict-origin-when-cross-origin"
          Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
          X-Environment: "${ENVIRONMENT:-test}"
    enabled: true
  
  # Protect against common attacks
  - name: request-termination
    config:
      status_code: 400
      message: "Request path contains malicious content"
      content_type: "application/json"
    enabled: true
    match:
      paths:
        - ~/(?:.*)/\/etc\/password/?~
        - ~/(?:.*)/\/etc\/hosts/?~
        - ~/(?:.*)/\/bin\/sh/?~
        - ~/(?:.*)/\/bin\/bash/?~
        - ~/%2E%2E/?~
        - ~/%2e%2e/?~
        - ~/\.\.\/?~
  
  # Global rate limiting protection
  - name: rate-limiting
    config:
      second: null
      minute: ${GLOBAL_RATE_LIMIT_MINUTE:-240}  # 4 requests per second average
      hour: ${GLOBAL_RATE_LIMIT_HOUR:-10000}
      day: ${GLOBAL_RATE_LIMIT_DAY:-100000}
      policy: local
      limit_by: ip
      hide_client_headers: false
      fault_tolerant: true
      redis_timeout: 2000
    enabled: true
  
  # Global Bot protection
  - name: bot-detection
    config:
      allow:
        - known-bots
        - seo
      deny:
        - malicious
    enabled: true
  
  # Track unique request IDs across services
  - name: correlation-id
    config:
      header_name: X-Request-ID
      generator: uuid
      echo_downstream: true
    enabled: true
  
  # HTTP to HTTPS redirect
  - name: request-transformer
    config:
      http_method: GET
      remove:
        headers:
          - host
      replace:
        headers:
          - "host:${BASE_DOMAIN:-dive25.local}"
    enabled: ${ENABLE_HTTP_REDIRECT:-true}
    match:
      http_method: GET
  
  # Centralized logging
  - name: http-log
    config:
      http_endpoint: ${LOG_ENDPOINT:-http://log-collector:3000/logs}
      method: POST
      timeout: 1000
      keepalive: 60000
      flush_timeout: 2
      retry_count: 5
      queue_size: 1
      content_type: application/json
    enabled: ${ENABLE_HTTP_LOGGING:-true}
