_format_version: "3.0"
_transform: true

# Standardized Kong Configuration for DIVE25
# Generated for ${ENVIRONMENT} environment

services:
  # Frontend Service
  - name: frontend-service
    url: ${INTERNAL_FRONTEND_URL}
    tags:
      - core
      - frontend
      - public
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      # Route based on frontend domain
      - name: frontend-domain-route
        hosts:
          - "${FRONTEND_DOMAIN}.${BASE_DOMAIN}"
        protocols:
          - http
          - https
        paths:
          - "/"
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
      # Route for auth callbacks
      - name: frontend-auth-routes
        hosts:
          - "${FRONTEND_DOMAIN}.${BASE_DOMAIN}"
          - "${BASE_DOMAIN}"
        protocols:
          - http
          - https
        paths:
          - /callback
          - /logout
          - /error
          - /login
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
        # Higher priority than the root route
        priority: 100
    plugins:
      - name: cors
        config:
          origins:
            - "${CORS_ALLOWED_ORIGINS}"
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          headers:
            - Accept
            - Accept-Version
            - Authorization
            - Content-Length
            - Content-MD5
            - Content-Type
            - Date
            - X-Auth-Token
          exposed_headers:
            - X-Auth-Token
          credentials: true
          max_age: 3600
          preflight_continue: false

  # API Service
  - name: api-service
    url: ${INTERNAL_API_URL}
    tags:
      - core
      - backend
      - api
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      # Route based on API domain
      - name: api-domain-route
        hosts:
          - "${API_DOMAIN}.${BASE_DOMAIN}"
        protocols:
          - http
          - https
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
    plugins:
      - name: cors
        config:
          origins:
            - "${CORS_ALLOWED_ORIGINS}"
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          headers:
            - Accept
            - Accept-Version
            - Authorization
            - Content-Length
            - Content-MD5
            - Content-Type
            - Date
            - X-Auth-Token
          exposed_headers:
            - X-Auth-Token
          credentials: true
          max_age: 3600
          preflight_continue: false
      # Add rate limiting to API
      - name: rate-limiting
        config:
          minute: ${rate_limits.per_minute}
          hour: ${rate_limits.per_hour}
          policy: local
          fault_tolerant: true
          hide_client_headers: false
          redis_timeout: 2000
          redis_database: 0
          redis_port: 6379
      # Add OIDC plugin to verify tokens and pass user info to the API
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_FRONTEND}
          client_secret: ${KEYCLOAK_CLIENT_SECRET}
          discovery: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token/introspect
          bearer_only: true
          realm: ${KEYCLOAK_REALM}
          ssl_verify: ${USE_HTTPS:-true}
          token_endpoint_auth_method: client_secret_post
          # Pass user info to the backend in a header
          pass_user_info_in_header: true
          user_info_header_name: X-UserInfo
          # Enable introspection for better token validation
          use_introspection: true
          # Only allow authenticated access
          anonymous: false

  # Keycloak Service
  - name: keycloak-service
    url: ${INTERNAL_KEYCLOAK_URL}
    tags:
      - auth
      - keycloak
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      # Route based on Keycloak domain
      - name: keycloak-domain-route
        hosts:
          - "${KEYCLOAK_DOMAIN}.${BASE_DOMAIN}"
        protocols:
          - http
          - https
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
    plugins:
      - name: cors
        config:
          origins:
            - "${CORS_ALLOWED_ORIGINS}"
          methods:
            - GET
            - POST
            - PUT
            - DELETE
            - OPTIONS
          credentials: true
          max_age: 3600
      - name: response-transformer
        config:
          add:
            headers: ${KEYCLOAK_SECURITY_HEADERS}

  # Grafana Service (Admin)
  - name: grafana-service
    url: ${INTERNAL_GRAFANA_URL}
    tags:
      - monitoring
      - admin
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      # Route based on Grafana domain
      - name: grafana-domain-route
        hosts:
          - "${GRAFANA_DOMAIN}.${BASE_DOMAIN}"
        protocols:
          - http
          - https
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
    plugins:
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_FRONTEND}
          client_secret: ${KEYCLOAK_CLIENT_SECRET}
          discovery: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token/introspect
          bearer_only: false
          realm: ${KEYCLOAK_REALM}
          redirect_uri_path: /callback
          logout_path: /logout
          redirect_after_logout_uri: /
          ssl_verify: ${USE_HTTPS}
          session_secret: ${SESSION_SECRET}
          token_endpoint_auth_method: client_secret_post
          refresh_tokens: true
          encrypt_session_cookie: true
          use_pkce: true
          auth_methods:
            - authorization_code
          response_type: code
          unauth_action: auth
          # Only allow authenticated access
          anonymous: false

  # Prometheus Service (Admin)
  - name: prometheus-service
    url: ${INTERNAL_PROMETHEUS_URL}
    tags:
      - monitoring
      - admin
    connect_timeout: 60000
    read_timeout: 60000
    write_timeout: 60000
    retries: 2
    routes:
      # Route based on Prometheus domain
      - name: prometheus-domain-route
        hosts:
          - "${PROMETHEUS_DOMAIN}.${BASE_DOMAIN}"
        protocols:
          - http
          - https
        strip_path: false
        preserve_host: true
        https_redirect_status_code: 301
    plugins:
      - name: oidc-auth
        config:
          client_id: ${KEYCLOAK_CLIENT_ID_FRONTEND}
          client_secret: ${KEYCLOAK_CLIENT_SECRET}
          discovery: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/.well-known/openid-configuration
          introspection_endpoint: ${PUBLIC_KEYCLOAK_URL}/realms/${KEYCLOAK_REALM}/protocol/openid-connect/token/introspect
          bearer_only: false
          realm: ${KEYCLOAK_REALM}
          redirect_uri_path: /callback
          logout_path: /logout
          redirect_after_logout_uri: /
          ssl_verify: ${USE_HTTPS}
          session_secret: ${SESSION_SECRET}
          token_endpoint_auth_method: client_secret_post
          refresh_tokens: true
          encrypt_session_cookie: true
          use_pkce: true
          auth_methods:
            - authorization_code
          response_type: code
          unauth_action: auth
          # Only allow authenticated access
          anonymous: false

# Global plugins applied to all routes
plugins:
  # Security headers for all services
  - name: response-transformer
    config:
      add:
        headers:
          - "X-Frame-Options:SAMEORIGIN"
          - "X-XSS-Protection:1; mode=block"
          - "X-Content-Type-Options:nosniff"
          - "Referrer-Policy:strict-origin-when-cross-origin"

  # Request ID for tracing
  - name: correlation-id
    config:
      header_name: X-Request-ID
      generator: uuid
      echo_downstream: true

  # Request size limits
  - name: request-size-limiting
    config:
      allowed_payload_size: 10 